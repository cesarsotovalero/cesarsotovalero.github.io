name: Compile Resume to PDF

on:
  schedule:
    - cron: "0 0 1 * *" # Runs at 00:00 on the 1st of every month
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Fetch Google Scholar data from RapidAPI
        run: |
          curl --request GET \
            --url 'https://google-scholar-data.p.rapidapi.com/author_details_by_id?author_id=jNBoowwAAAAJ' \
            --header 'x-rapidapi-host: google-scholar-data.p.rapidapi.com' \
            --header "x-rapidapi-key: ${{ secrets.RAPIDAPI_GOOGLE_SCHOLAR_DATA_API_KEY }}" \
            -o scholar.json

          CITEDBY=$(jq '.result.citedby' scholar.json)
          HINDEX=$(jq '.result.hindex' scholar.json)

          # Write to LaTeX macro file for use in cesar-resume.tex
          echo "\\newcommand{\\citations}{$CITEDBY}" > files/CV/citations.tex
          echo "\\newcommand{\\hindex}{$HINDEX}" >> files/CV/citations.tex

          cat files/CV/citations.tex

      - name: Inject blog post count
        run: |
          # Count only Markdown posts with published: true in front matter
          POST_COUNT=$(grep -R '^published:[[:space:]]*true' -l _posts --include '*.md' | wc -l)
          echo "\\newcommand{\\blogposts}{$POST_COUNT}" >> files/CV/citations.tex
          cat files/CV/citations.tex

      - name: Fetch YouTube profile data
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          YOUTUBE_CHANNEL_ID: ${{ secrets.YOUTUBE_CHANNEL_ID }}
        run: |
          python scripts/fetch_youtube_profile.py

      - name: Extract YouTube statistics and update LaTeX macros
        run: |
          # Pull counts from profile JSON
          VIDEO_COUNT=$(jq '.items[0].statistics.videoCount' _data/youtube-profile.json)
          VIEW_COUNT=$(jq '.items[0].statistics.viewCount' _data/youtube-profile.json)
          SUBS_COUNT=$(jq '.items[0].statistics.subscriberCount' _data/youtube-profile.json)
          # Write LaTeX macros
          echo "\\newcommand{\\youtubevideos}{$VIDEO_COUNT}" >> files/CV/citations.tex
          echo "\\newcommand{\\ytViews}{$VIEW_COUNT}" >> files/CV/citations.tex
          echo "\\newcommand{\\ytSubscribers}{$SUBS_COUNT}" >> files/CV/citations.tex
          cat files/CV/citations.tex

      - name: Set up LaTeX
        uses: dante-ev/latex-action@latest
        with:
          root_file: files/CV/cesar-resume.tex
          args: -lualatex -interaction=nonstopmode -halt-on-error files/CV/cesar-resume.tex

      - name: Locate and normalize PDF filename
        run: |
          # If LaTeX action outputs at repo root
          if [ -f cesar-resume.pdf ]; then
            mv cesar-resume.pdf files/CV/cesar-resume.pdf
          fi
          # Rename .tex.pdf inside files/CV
          if [ -f files/CV/cesar-resume.tex.pdf ]; then
            mv files/CV/cesar-resume.tex.pdf files/CV/cesar-resume.pdf
          fi

      - name: Commit and push updated PDF
        run: |
          if [ ! -f files/CV/cesar-resume.pdf ]; then
            echo "Error: files/CV/cesar-resume.pdf not found. Skipping." && exit 0
          fi
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add files/CV/cesar-resume.pdf
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Update cesar-resume.pdf $(date -u +'%Y-%m-%d')"
            git push
          else
            echo "No changes to commit."
          fi
